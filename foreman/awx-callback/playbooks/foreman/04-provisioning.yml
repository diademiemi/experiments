---
# Welcome to!!
# JINJA2 AND REGEX HELL!!!

- name: Configure Foreman
  hosts: foreman
  handlers:
    - name: Build PXE Default
      ansible.builtin.command: |
        hammer template build-pxe-default
      changed_when: true

  tasks:
    - name: Get OS ID
      become: true
      ansible.builtin.command: |
        hammer --csv os list \
        --search "{{ foreman_os_name }} {{ foreman_os_major }} {{ foreman_os_family }}" \
        --fields=title,id
      register: os_list
      changed_when: false

    - name: Find line that matches exact OS name
      ansible.builtin.set_fact:
        foreman_os_id: "{{ item.split(',')[0] | trim }}"
      loop: "{{ os_list.stdout_lines }}"
      when: item.split(',')[1] | trim == foreman_os_name + " " + foreman_os_major

    - name: Show OS info
      become: true
      ansible.builtin.command: |
        hammer os info \
          --id {{ foreman_os_id }}
      changed_when: false
      register: os_before

    - name: Find provisioning template names
      become: true
      ansible.builtin.command: |
        hammer --csv template list \
        --search "{{ item }}" \
        --fields=name,id
      register: template_list
      changed_when: false
      loop: "{{ foreman_os_provisioning_templates }}"

    - name: Find line that matches exact provisioning template name
      ansible.builtin.set_fact:
        foreman_os_provisioning_template_ids: "{{ foreman_os_provisioning_template_ids | default([]) + \
          [item.0 | regex_search(regex_query, multiline=True) | split(',') | first | trim] }}"
      loop: "{{ template_list | json_query('results[*].stdout') | zip(foreman_os_provisioning_templates) | list }}"
      when: item.0 | regex_search(regex_query, multiline=True)
      vars:
        regex_query: "\\s*[0-9]+\\s*,\\s*{{ item.1 }}\\s*"

    - name: Link
      become: true
      ansible.builtin.command: |
        hammer os update \
        --id {{ foreman_os_id }} \
        --provisioning-templates "{{ foreman_os_provisioning_templates | join(',') }}"
      changed_when: false

    - name: Set templates as default with set-default-template
      become: true
      ansible.builtin.command: |
        hammer os set-default-template \
        --id {{ foreman_os_id }} \
        --provisioning-template-id {{ item }}
      register: output
      changed_when: false
      failed_when: output.rc != 0 and "Title has already been taken" not in output.stderr
      loop: "{{ foreman_os_provisioning_template_ids }}"

    - name: Return whether OS changed
      ansible.builtin.command: |
        hammer os info \
          --id {{ foreman_os_id }}
      register: os_after
      changed_when: os_before.stdout != os_after.stdout
      notify: Build PXE Default

...
